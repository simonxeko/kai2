#! /usr/bin/env node

{"version":3,"sources":["../src/app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import { Cipher } from 'tls';\nimport { version } from 'punycode';\nimport * as vm from 'vm';\n\nconst fs = require('fs');\nconst colors = require('colors');\nconst os = require('os');\nconst shell = require(\"shelljs\");\nconst fetch = require('node-fetch');\nconst spawn = require('child_process').spawn;\nconst argv = process.argv;\nlet verbose = false;\nlet debug = (str: String) => {\n    if (verbose) {\n        console.log(str.grey);\n    }\n}\nif (argv.indexOf('-v') > 0) {\n    verbose = true;\n    argv.splice(argv.indexOf('-v'),1);\n}\n\nconst USER_HOME = os.homedir();\nlet C: any = {};\nlet initJSON = \"\";\n\ntry {\n    initJSON = fs.readFileSync(`${USER_HOME}/.kai/settings.json`, 'utf-8').toString();\n    C = JSON.parse(initJSON);\n} catch (e) {\n    if (e.name == \"SyntaxError\") {\n        console.log((\"Syntax Error in ~/.kai/settings.json\").red);\n        process.exit(-1);\n    }\n    try {\n        fs.mkdirSync(`${USER_HOME}/.kai`);\n    } catch (eMkdir) {\n\n    }\n    fs.writeFileSync(`${USER_HOME}/.kai/settings.json`, '{}');\n    C = {};\n}\n\nlet sentence = argv.slice(2).join(\" \");\n\ninterface IPattern {\n    re: RegExp;\n    handler: Function;\n}\n\nvar patterns: Array<IPattern> = [];\n\n// TODO: Integration with Api.ai to the top layer.\n\n// Basic Module ( shortcut and note memory )\npatterns.push({ re: /^(go[ ]?to|jump[ ]?to) (.+)$/, handler: onGoto });\npatterns.push({ re: /^(forget|forgot|delete|remove) (.+)$/, handler: onForget });\npatterns.push({ re: /^(remember|record|note|save|memo) (['\"]?.+['\"]?) (as)? (['\"]?.+?['\"]?)$/, handler: onRemember }); // kai remember here as 'webdev' -> kai goto webdev\npatterns.push({ re: /^where[ ]?is[ ]?(.+)$/, handler: onWhere });\n\n// Google\npatterns.push({ re: /^google (.+)$/, handler: onGoogle });\n\n// Joke Module\npatterns.push({ re: /^tell me a joke$/, handler: onJoke });\n\nfunction onGoto(result) {\n    let key = result[2];\n    let path = C.shortcut[key];\n\n    if (!path) {\n        console.log(`I don't know where ${key} is.`);\n    } else {\n        console.log(`Jumping to ${path}`);\n        console.log(`cd ${path}`);\n    }\n}\n\n\nfunction onForget(result) {\n    let key = result[2];\n    let path = C.shortcut[key];\n\n    if (!path) {\n        console.log(`${key} means nothing to me.`);\n    } else {\n        console.log(`OK, I'll forget ${key} (${path})`);\n        delete C.shortcut[key];\n    }\n}\n\nfunction onRemember(result) {\n    let path = result[2],\n        key = result[4];\n    if (!C.shortcut) { C.shortcut = {}; }\n    if (path === \".\" || path === \"here\" || path === \"this folder\") path = process.cwd();\n    C.shortcut[key] = path;\n    console.log(`Remembering ${path} as ${key}`.green);\n}\n\nfunction onWhere(result) {\n    let key = result[1];\n    let path = C.shortcut[key];\n\n    if (!path) {\n        console.log(`I don't know where ${key} is.`);\n    } else {\n        console.log(`It is located at ${path}`);\n    }\n}\n\nfunction onGoogle(result) {\n    spawn('open', ['https://www.google.com.tw/webhp?ie=UTF-8#q='+encodeURIComponent(result[1])]);\n}\n\nfunction onJoke(result) {\n    fetch('http://tambal.azurewebsites.net/joke/random').then(function(res) {\n        return res.json();\n    }).then(function(json) {\n        console.log(json.joke);\n    });\n}\n\ndebug(\"Sentence \" + sentence);\n\nlet matches:Array<{result: RegExpExecArray, pattern: IPattern}> = [];\n\npatterns.map((v: IPattern) => {\n    let result: RegExpExecArray | null = v.re.exec(sentence);\n    if (result) {\n        matches.push({result: result, pattern: v});\n    }\n});\n\nif (matches.length > 1) {\n    debug(\"DEBUG:: Command matched twice\".red);\n}\n\nmatches.map((v: {result: RegExpExecArray, pattern: IPattern}) => {\n    debug(\"Matched \" + v.pattern.re.source);\n    v.pattern.handler(v.result);\n});\n\nlet endJSON = JSON.stringify(C);\nif (initJSON != endJSON) {\n    fs.writeFileSync(`${USER_HOME}/.kai/settings.json`, endJSON + \"\\n\");\n}"],"sourceRoot":"/Users/simon/Dev/kai2/src"}